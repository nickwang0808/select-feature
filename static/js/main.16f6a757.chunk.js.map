{"version":3,"sources":["components/control/Feature.tsx","utilities/usePrevious.ts","components/layout/Content.tsx","components/layout/Footer.tsx","components/layout/Header.tsx","mockData/featuresTree.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Feature","feature","children","name","price","parentNames","setParentTotal","checkedChildren","setCheckedChildren","useState","total","setTotal","isChecked","setIsChecked","_price","_setPrice","_checkedChildren","_setCheckedChildren","prevTotal","value","ref","useRef","useEffect","current","usePrevious","length","prev","filter","e","diff","featureFullName","priceDisplay","String","className","checked","onChange","target","animation","color","map","subFeature","index","Content","Footer","Header","mockFeatures","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16f6a757.chunk.js","sourcesContent":["import { Checkbox } from \"pretty-checkbox-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { IFeature } from \"../../mockData/featuresTree\";\nimport usePrevious from \"../../utilities/usePrevious\";\n\ninterface IProps {\n  parentNames: string;\n  feature: IFeature;\n  setParentTotal: React.Dispatch<React.SetStateAction<number>>;\n  checkedChildren: string[];\n  setCheckedChildren: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nexport default function Feature({\n  feature: { children, name, price },\n  parentNames,\n  setParentTotal,\n  checkedChildren,\n  setCheckedChildren,\n}: IProps) {\n  const [total, setTotal] = useState(0);\n  const [isChecked, setIsChecked] = useState(false);\n  /* need to dynamically apply discount, so use a state to store it */\n  const [_price, _setPrice] = useState<number | null>(price);\n  /* this is used strictly for children to keep track of which one is checked */\n  const [_checkedChildren, _setCheckedChildren] = useState<string[]>([]);\n\n  const prevTotal = usePrevious(total);\n\n  /* We use checkedChildren in parent to keep track of who checked, we apply discount self is not the first one checked */\n  useEffect(() => {\n    if (price) {\n      if (checkedChildren.length > 0) {\n        if (checkedChildren[0] === name) {\n          return _setPrice(price);\n        } else {\n          _setPrice(price / 2);\n        }\n      } else {\n        /* undo discount */\n        _setPrice(price);\n      }\n    }\n  }, [checkedChildren, isChecked, name, price]);\n\n  /* when we check self, let parent know we checked and update self price (if applicable) to self total first */\n  useEffect(() => {\n    if (isChecked === false) {\n      setTotal(0);\n      setCheckedChildren((prev) => prev.filter((e) => e !== name));\n    } else {\n      if (_price) {\n        setTotal(_price);\n      }\n      setCheckedChildren((prev) => [...prev, name]);\n    }\n  }, [isChecked, _price, name, setCheckedChildren]);\n\n  /* When total changes we update the parent's total */\n  useEffect(() => {\n    if (total < prevTotal) {\n      /* because the price is cascaded up, we need to only update the difference to parent */\n      const diff = prevTotal - total;\n      setParentTotal((prev) => prev - diff);\n    } else {\n      const diff = total - prevTotal;\n      setParentTotal((prev) => prev + diff);\n    }\n  }, [total, prevTotal, setParentTotal]);\n\n  const featureFullName = `${parentNames}${\n    parentNames.length ? \"-\" : \"\"\n  }${name}`;\n\n  const priceDisplay =\n    total !== 0 ? `$${String(total)}` : _price ? `$${_price}` : \"-\";\n\n  return (\n    <div className=\"mx\">\n      <Checkbox\n        checked={isChecked}\n        onChange={({ target }) => setIsChecked(target.checked)}\n        animation=\"smooth\"\n        color=\"info\"\n      >\n        {`${parentNames.length ? \"Sub-feature \" : \"Feature \"}`}\n        {featureFullName}\n        <span> ({priceDisplay})</span>\n      </Checkbox>\n\n      {/* render children recursively, assuming features with children does not have price */}\n      {!price && isChecked && (\n        <div className=\"indentation\">\n          {children?.map((subFeature, index) => {\n            return (\n              <Feature\n                feature={subFeature}\n                parentNames={featureFullName}\n                key={featureFullName + index}\n                setParentTotal={setTotal}\n                checkedChildren={_checkedChildren}\n                setCheckedChildren={_setCheckedChildren}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nexport default function usePrevious(value: number) {\n  const ref = useRef<number>(0);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import React, { ReactNode } from \"react\";\n\nexport default function Content({ children }: { children: ReactNode }) {\n  return <div className=\"content\">{children}</div>;\n}\n","import React from \"react\";\n\ninterface IProps {\n  total: number;\n}\n\nexport default function Footer({ total }: IProps) {\n  return (\n    <div>\n      <hr />\n      <div className=\"footer-container\">\n        <div className=\"pricing\">\n          <strong>Total: ${total} / mo</strong>\n        </div>\n        <button className=\"save-button\">Save</button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Header() {\n  return (\n    <div>\n      <div className=\"header\">\n        <h2>Subscription Preferences</h2>\n      </div>\n      <hr />\n    </div>\n  );\n}\n","export interface IFeature {\n  /* assuming the name is unique relative to the current branch and level. We should use Guid on prod \n  to ensure uniqueness */\n  name: string;\n  // recursive interface, the price can be sub-features or just a price\n  children: IFeature[] | null;\n  price: null | number;\n}\n\nexport const mockFeatures: IFeature[] = [\n  {\n    name: \"A\",\n    price: null,\n    children: [\n      {\n        name: \"1\",\n        price: null,\n        children: [\n          {\n            name: \"1\",\n            price: 50,\n            children: null,\n          },\n        ],\n      },\n      {\n        name: \"2\",\n        price: null,\n        children: [\n          {\n            name: \"1\",\n            price: 50,\n            children: null,\n          },\n          {\n            name: \"2\",\n            price: 50,\n            children: null,\n          },\n        ],\n      },\n      {\n        name: \"3\",\n        price: null,\n        children: [\n          {\n            name: \"1\",\n            price: 50,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"B\",\n    price: null,\n    children: [\n      {\n        name: \"1\",\n        price: null,\n        children: [\n          {\n            name: \"1\",\n            price: 50,\n            children: null,\n          },\n        ],\n      },\n      {\n        name: \"2\",\n        price: null,\n        children: [\n          {\n            name: \"1\",\n            price: 50,\n            children: null,\n          },\n          {\n            name: \"2\",\n            price: 50,\n            children: null,\n          },\n        ],\n      },\n      {\n        name: \"3\",\n        price: null,\n        children: [\n          {\n            name: \"1\",\n            price: 50,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"C\",\n    price: null,\n    children: [\n      {\n        name: \"1\",\n        price: null,\n        children: [\n          {\n            name: \"1\",\n            price: 50,\n            children: null,\n          },\n        ],\n      },\n      {\n        name: \"2\",\n        price: null,\n        children: [\n          {\n            name: \"1\",\n            price: null,\n            children: [\n              {\n                name: \"1\",\n                price: 50,\n                children: null,\n              },\n              {\n                name: \"2\",\n                price: 50,\n                children: null,\n              },\n            ],\n          },\n          {\n            name: \"2\",\n            price: 50,\n            children: null,\n          },\n        ],\n      },\n      {\n        name: \"3\",\n        price: null,\n        children: [\n          {\n            name: \"1\",\n            price: 50,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n];\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Feature from \"./components/control/Feature\";\nimport Content from \"./components/layout/Content\";\nimport Footer from \"./components/layout/Footer\";\nimport Header from \"./components/layout/Header\";\nimport { mockFeatures } from \"./mockData/featuresTree\";\n\nexport default function App() {\n  const [total, setTotal] = useState(0);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Content>\n        {mockFeatures.map((feature, index) => {\n          return (\n            <Feature\n              feature={feature}\n              parentNames={\"\"}\n              key={`${index}`}\n              setParentTotal={setTotal}\n              checkedChildren={[]}\n              setCheckedChildren={() => {}}\n            />\n          );\n        })}\n      </Content>\n      <Footer total={total} />\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}